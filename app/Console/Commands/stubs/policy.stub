<?php

namespace DummyNamespace;

use Illuminate\Auth\Access\HandlesAuthorization;
use NamespacedDummyModel;
use NamespacedDummyUserModel;

class DummyClass
{
	use HandlesAuthorization;

	/**
	 * Determine whether the user can view any DocDummyPluralModel.
	 *
	 * @param  \NamespacedDummyUserModel  $user
	 * @return mixed
	 */
	public function viewAny(DummyUser $user)
	{
		return $user->hasPermission('DummySlug.viewAny');
	}

	/**
	 * Determine whether the user can view the DocDummyModel.
	 *
	 * @param  \NamespacedDummyUserModel  $user
	 * @param  \NamespacedDummyModel  $dummyModel
	 * @return mixed
	 */
	public function view(DummyUser $user, DummyModel $dummyModel)
	{
		return $user->hasPermission('DummySlug.view');
	}

	/**
	 * Determine whether the user can create DocDummyPluralModel.
	 *
	 * @param  \NamespacedDummyUserModel  $user
	 * @return mixed
	 */
	public function create(DummyUser $user)
	{
		return $user->hasPermission('DummySlug.create');
	}

	/**
	 * Determine whether the user can update the DocDummyModel.
	 *
	 * @param  \NamespacedDummyUserModel  $user
	 * @param  \NamespacedDummyModel  $dummyModel
	 * @return mixed
	 */
	public function update(DummyUser $user, DummyModel $dummyModel)
	{
		return $user->hasPermission('DummySlug.update');
	}

	/**
	 * Determine whether the user can delete the DocDummyModel.
	 *
	 * @param  \NamespacedDummyUserModel  $user
	 * @param  \NamespacedDummyModel  $dummyModel
	 * @return mixed
	 */
	public function delete(DummyUser $user, DummyModel $dummyModel)
	{
		return $user->hasPermission('DummySlug.delete');
	}

	/**
	 * Determine whether the user can restore the DocDummyModel.
	 *
	 * @param  \NamespacedDummyUserModel  $user
	 * @param  \NamespacedDummyModel  $dummyModel
	 * @return mixed
	 */
	public function restore(DummyUser $user, DummyModel $dummyModel)
	{
		return $user->hasPermission('DummySlug.restore');
	}

	/**
	 * Determine whether the user can permanently delete the DocDummyModel.
	 *
	 * @param  \NamespacedDummyUserModel  $user
	 * @param  \NamespacedDummyModel  $dummyModel
	 * @return mixed
	 */
	public function forceDelete(DummyUser $user, DummyModel $dummyModel)
	{
		return $user->hasPermission('DummySlug.forceDelete');
	}
}
